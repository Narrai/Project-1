// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaBox.Storing;

namespace PizzaBox.Storing.Migrations
{
    [DbContext(typeof(PizzaBoxContext))]
    [Migration("20210120160014_Updating_Store_Info")]
    partial class Updating_Store_Info
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("APizzaModelToppings", b =>
                {
                    b.Property<long>("PizzasEntityId")
                        .HasColumnType("bigint");

                    b.Property<long>("ToppingsEntityId")
                        .HasColumnType("bigint");

                    b.HasKey("PizzasEntityId", "ToppingsEntityId");

                    b.HasIndex("ToppingsEntityId");

                    b.ToTable("APizzaModelToppings");
                });

            modelBuilder.Entity("PizzaBox.Domain.Abstracts.APizzaModel", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Crust")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrderEntityId")
                        .HasColumnType("bigint");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.HasIndex("OrderEntityId");

                    b.ToTable("Pizzas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("APizzaModel");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Crusts", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Cursts");

                    b.HasData(
                        new
                        {
                            EntityId = 1L,
                            Name = "thick"
                        },
                        new
                        {
                            EntityId = 2L,
                            Name = "thin"
                        },
                        new
                        {
                            EntityId = 3L,
                            Name = "stuffed"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Customer", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StoreEntityId")
                        .HasColumnType("bigint");

                    b.HasKey("EntityId");

                    b.HasIndex("StoreEntityId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            EntityId = 1L,
                            Name = "Nar",
                            StoreEntityId = 1L
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Order", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("CustomerEntityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<long>("StoreEntityId")
                        .HasColumnType("bigint");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.HasKey("EntityId");

                    b.HasIndex("CustomerEntityId");

                    b.HasIndex("StoreEntityId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            EntityId = 1L,
                            DateModified = new DateTime(2021, 1, 20, 10, 0, 12, 957, DateTimeKind.Local).AddTicks(2790),
                            StoreEntityId = 1L,
                            TotalPrice = 20.45f
                        },
                        new
                        {
                            EntityId = 2L,
                            DateModified = new DateTime(2021, 1, 20, 10, 0, 12, 983, DateTimeKind.Local).AddTicks(7680),
                            StoreEntityId = 1L,
                            TotalPrice = 33.45f
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Prices", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<long>("SizeEntityId")
                        .HasColumnType("bigint");

                    b.HasKey("EntityId");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            EntityId = 1L,
                            Price = 10.99f,
                            SizeEntityId = 1L
                        },
                        new
                        {
                            EntityId = 2L,
                            Price = 12.99f,
                            SizeEntityId = 2L
                        },
                        new
                        {
                            EntityId = 3L,
                            Price = 14.99f,
                            SizeEntityId = 3L
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Sizes", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            EntityId = 1L,
                            Size = "small"
                        },
                        new
                        {
                            EntityId = 2L,
                            Size = "medium"
                        },
                        new
                        {
                            EntityId = 3L,
                            Size = "large"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Store", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            EntityId = 1L,
                            Name = "Dominos"
                        },
                        new
                        {
                            EntityId = 2L,
                            Name = "Pizz Hut"
                        },
                        new
                        {
                            EntityId = 3L,
                            Name = "Papa John's"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Toppings", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            EntityId = 1L,
                            Name = "tomato"
                        },
                        new
                        {
                            EntityId = 2L,
                            Name = "grilled chicken"
                        },
                        new
                        {
                            EntityId = 3L,
                            Name = "sauce"
                        },
                        new
                        {
                            EntityId = 4L,
                            Name = "jalapenos"
                        },
                        new
                        {
                            EntityId = 5L,
                            Name = "ham"
                        },
                        new
                        {
                            EntityId = 6L,
                            Name = "sauce"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Pizza", b =>
                {
                    b.HasBaseType("PizzaBox.Domain.Abstracts.APizzaModel");

                    b.HasDiscriminator().HasValue("Pizza");

                    b.HasData(
                        new
                        {
                            EntityId = 1L,
                            Crust = "stuffed",
                            Price = 10.99f,
                            Size = "small"
                        },
                        new
                        {
                            EntityId = 2L,
                            Crust = "thick",
                            Price = 12.99f,
                            Size = "medium"
                        });
                });

            modelBuilder.Entity("APizzaModelToppings", b =>
                {
                    b.HasOne("PizzaBox.Domain.Abstracts.APizzaModel", null)
                        .WithMany()
                        .HasForeignKey("PizzasEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Models.Toppings", null)
                        .WithMany()
                        .HasForeignKey("ToppingsEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaBox.Domain.Abstracts.APizzaModel", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Order", null)
                        .WithMany("Pizzas")
                        .HasForeignKey("OrderEntityId");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Customer", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Order", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Customer", null)
                        .WithMany("Orders")
                        .HasForeignKey("CustomerEntityId");

                    b.HasOne("PizzaBox.Domain.Models.Store", "Store")
                        .WithMany("Orders")
                        .HasForeignKey("StoreEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Order", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Store", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
